"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1118],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,m=u["".concat(a,".").concat(d)]||u[d]||f[d]||s;return t?r.createElement(m,c(c({ref:n},l),{},{components:t})):r.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,c=new Array(s);c[0]=d;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=e,i[u]="string"==typeof e?e:o,c[1]=i;for(var p=2;p<s;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},97760:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=t(87462),o=t(63366),s=(t(67294),t(3905)),c=["components"],i={title:"rucio-storage-consistency-actions"},a=void 0,p={unversionedId:"bin/rucio-storage-consistency-actions",id:"bin/rucio-storage-consistency-actions",title:"rucio-storage-consistency-actions",description:"",source:"@site/../docs/bin/rucio-storage-consistency-actions.md",sourceDirName:"bin",slug:"/bin/rucio-storage-consistency-actions",permalink:"/documentation/bin/rucio-storage-consistency-actions",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-storage-consistency-actions.md",tags:[],version:"current",frontMatter:{title:"rucio-storage-consistency-actions"},sidebar:"docs",previous:{title:"rucio-replica-recoverer",permalink:"/documentation/bin/rucio-replica-recoverer"},next:{title:"rucio-transmogrifier",permalink:"/documentation/bin/rucio-transmogrifier"}},l={},u=[],f={toc:u},d="wrapper";function m(e){var n=e.components,t=(0,o.Z)(e,c);return(0,s.kt)(d,(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'usage: rucio-storage-consistency-actions [-h] [--run-once] [--scope SCOPE]\n                                         [--rses RSES [RSES ...]]\n                                         [--sleep-time SLEEP_TIME]\n                                         [--dark-min-age DARK_MIN_AGE]\n                                         [--dark-threshold-percent DARK_THRESHOLD_PERCENT]\n                                         [--miss-threshold-percent MISS_THRESHOLD_PERCENT]\n                                         [--scanner-files-path SCANNER_FILES_PATH]\n                                         [--threads THREADS] [-f]\n\nThe Consistency-Actions daemon is responsible for applying the corrective actions resulting from a consistency-check scan of an RSE.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --scope SCOPE         Scope of the input files produced by theiCC scanner -\n                        e.g.: "cms"\n  --rses RSES [RSES ...]\n                        RSEs to check, specified as a RSE expression. Defaults\n                        to check all RSEs.\n  --sleep-time SLEEP_TIME\n                        Concurrency control: thread sleep time (in seconds)\n                        after each chunk of work\n  --dark-min-age DARK_MIN_AGE\n                        Min. age (in days) of a file to be considered as DARK.\n  --dark-threshold-percent DARK_THRESHOLD_PERCENT\n                        Max. percentage of dark files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --miss-threshold-percent MISS_THRESHOLD_PERCENT\n                        Max. percentage of missing files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --scanner-files-path SCANNER_FILES_PATH\n                        The path where the CC scanner files are mounted.\n  --threads THREADS     Concurrency control: total number of threads on this\n                        process\n  -f, --force-proceed   Force CC actions, even if number of dark/missing files\n                        over thresholds\n\nRun the daemon::\n  $ rucio-storage-consistency-actions --run-once --scope cms --rses T2_US_Purdue T2_US_Nebraska --dark-threshold-percent 2.0 --miss-threshold-percent 1.5 --scanner-files-path /tmp/consistency-dump --sleep-time 10\n')))}m.isMDXComponent=!0}}]);