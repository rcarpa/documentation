"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1915],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||l;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[c]="string"==typeof e?e:o,i[1]=a;for(var d=2;d<l;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72813:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>f,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var r=n(87462),o=n(63366),l=(n(67294),n(3905)),i=["components"],a={title:"UploadClient"},p=void 0,d={unversionedId:"client_api/uploadclient",id:"client_api/uploadclient",title:"UploadClient",description:"\\\\init\\\\",source:"@site/../docs/client_api/uploadclient.md",sourceDirName:"client_api",slug:"/client_api/uploadclient",permalink:"/documentation/client_api/uploadclient",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/client_api/uploadclient.md",tags:[],version:"current",frontMatter:{title:"UploadClient"},sidebar:"docs",previous:{title:"TouchClient",permalink:"/documentation/client_api/touchclient"},next:{title:"Developing with Rucio",permalink:"/documentation/developing_with_rucio"}},s={},c=[{value:"__init__",id:"__init__",level:2},{value:"upload",id:"upload",level:2},{value:"preferred_impl",id:"preferred_impl",level:2}],u={toc:c},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"__init__"},"_","_","init","_","_"),(0,l.kt)("span",{style:{"white-space":"pre"}},(0,l.kt)("p",null,"Initialises the basic settings for an UploadClient object"),(0,l.kt)("table",{style:{border:"none"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"_client"),": - Optional: rucio.client.client.Client object. If None, a new object will be created."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"logger"),": - Optional: logging.Logger object. If None, default logger will be used.")))))),(0,l.kt)("h2",{id:"upload"},"upload"),(0,l.kt)("span",{style:{"white-space":"pre"}},(0,l.kt)("table",{style:{border:"none"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"items"),": List of dictionaries. Each dictionary describing a file to upload. Keys:\npath                  - path of the file that will be uploaded\nrse                   - rse expression/name (e.g. 'CERN-PROD_DATADISK') where to upload the file\ndid_scope             - Optional: custom did scope (Default: user.\\<account",">",")\ndid_name              - Optional: custom did name (Default: name of the file)\ndataset_scope         - Optional: custom dataset scope\ndataset_name          - Optional: custom dataset name\ndataset_meta          - Optional: custom metadata for dataset\nimpl                  - Optional: name of the protocol implementation to be used to upload this item.\nforce_scheme          - Optional: force a specific scheme (if PFN upload this will be overwritten) (Default: None)\npfn                   - Optional: use a given PFN (this sets no_register to True, and no_register becomes mandatory)\nno_register           - Optional: if True, the file will not be registered in the rucio catalogue\nregister_after_upload - Optional: if True, the file will be registered after successful upload\nlifetime              - Optional: the lifetime of the file after it was uploaded\ntransfer_timeout      - Optional: time after the upload will be aborted\nguid                  - Optional: guid of the file\nrecursive             - Optional: if set, parses the folder structure recursively into collections"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"summary_file_path"),": Optional: a path where a summary in form of a json file will be stored"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"traces_copy_out"),": reference to an external list, where the traces should be uploaded"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ignore_availability"),": ignore the availability of a RSE"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"activity"),": the activity set to the rule if no dataset is specified"))),(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raises"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"InputValidationError"),": if any input arguments are in a wrong format"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"RSEWriteBlocked"),": if a given RSE is not available for writing"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"NoFilesUploaded"),": if no files were successfully uploaded"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"NotAllFilesUploaded"),": if not all files were successfully uploaded"))),(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,"  0 on success")))))),(0,l.kt)("h2",{id:"preferred_impl"},"preferred","_","impl"),(0,l.kt)("span",{style:{"white-space":"pre"}},(0,l.kt)("p",null,"Finds the optimum protocol impl preferred by the client and"),(0,l.kt)("p",null,"supported by the remote RSE."),(0,l.kt)("table",{style:{border:"none"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"rse_settings"),": dictionary containing the RSE settings"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"domain"),": The network domain, either 'wan' (default) or 'lan'"))),(0,l.kt)("tr",{style:{border:"none"}},(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raises"),":")),(0,l.kt)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"RucioException(msg)"),": general exception with msg for more details.")))))))}f.isMDXComponent=!0}}]);