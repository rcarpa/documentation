"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7743],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?n.createElement(f,a(a({ref:r},l),{},{components:t})):n.createElement(f,a({ref:r},l))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},71545:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>u,toc:()=>p});var n=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],c={title:"rucio-kronos"},s=void 0,u={unversionedId:"bin/rucio-kronos",id:"bin/rucio-kronos",title:"rucio-kronos",description:"",source:"@site/../docs/bin/rucio-kronos.md",sourceDirName:"bin",slug:"/bin/rucio-kronos",permalink:"/documentation/bin/rucio-kronos",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-kronos.md",tags:[],version:"current",frontMatter:{title:"rucio-kronos"},sidebar:"docs",previous:{title:"rucio-judge-repairer",permalink:"/documentation/bin/rucio-judge-repairer"},next:{title:"rucio-light-reaper",permalink:"/documentation/bin/rucio-light-reaper"}},l={},p=[],d={toc:p},m="wrapper";function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)(m,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"usage: rucio-kronos [-h] [--threads THREADS]\n                    [--sleep-time-files SLEEP_TIME_FILES]\n                    [--sleep-time-datasets SLEEP_TIME_DATASETS]\n\nKronos is a daemon that consume tracer massages and update the replica\naccessed time accordingly.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --threads THREADS     Concurrency control: number of threads\n  --sleep-time-files SLEEP_TIME_FILES\n                        Seconds to sleep between two cycles for the file\n                        thread\n  --sleep-time-datasets SLEEP_TIME_DATASETS\n                        Seconds to sleep between two cycles for the dataset\n                        thread\n")))}f.isMDXComponent=!0}}]);